<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:ReportGenerator.UI.ViewModels"
        xmlns:converters="using:ReportGenerator.UI.Converters"
        xmlns:domain="using:ReportGenerator.Domain.Entities"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="1400" d:DesignHeight="800"
        x:Class="ReportGenerator.UI.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="{Binding Title}"
        Width="1400" Height="800">

    <Window.Resources>
        <converters:PaperSizeToWidthConverter x:Key="PaperSizeToWidthConverter"/>
        <converters:BoolToFontWeightConverter x:Key="BoolToFontWeightConverter"/>
        <converters:BoolToFontStyleConverter x:Key="BoolToFontStyleConverter"/>
        <converters:ElementTypeToCornerRadiusConverter x:Key="ElementTypeToCornerRadiusConverter"/>
    </Window.Resources>

    <DockPanel>
        <!-- Status Bar -->
        <Border DockPanel.Dock="Bottom" Background="#f0f0f0" Padding="8">
            <TextBlock Text="{Binding StatusMessage}" />
        </Border>

        <!-- Toolbar -->
        <Border DockPanel.Dock="Top" Background="#e0e0e0" Padding="8">
            <StackPanel Orientation="Horizontal" Spacing="8">
                <!-- Show/Hide based on view -->
                <Button Content="⬅️ Back to Templates" Command="{Binding CloseDesignerCommand}"
                        IsVisible="{Binding IsDesignerVisible}" />

                <Button Content="New Template" Command="{Binding CreateNewTemplateCommand}"
                        IsVisible="{Binding !IsDesignerVisible}" />
                <Button Content="🎨 Open Designer" Command="{Binding OpenDesignerCommand}"
                        IsEnabled="{Binding SelectedTemplate, Converter={x:Static ObjectConverters.IsNotNull}}"
                        IsVisible="{Binding !IsDesignerVisible}" />
                <Button Content="Refresh" Command="{Binding LoadTemplatesCommand}"
                        IsVisible="{Binding !IsDesignerVisible}" />
                <Button Content="Delete" Command="{Binding DeleteTemplateCommand}"
                        IsEnabled="{Binding SelectedTemplate, Converter={x:Static ObjectConverters.IsNotNull}}"
                        IsVisible="{Binding !IsDesignerVisible}" />

                <!-- Designer toolbar -->
                <Button Content="💾 Save" Command="{Binding DesignerViewModel.SaveTemplateCommand}"
                        IsVisible="{Binding IsDesignerVisible}" ToolTip.Tip="Save Template (Ctrl+S)" />
                <Separator Width="1" Height="24" Background="#cccccc" Margin="4,0" IsVisible="{Binding IsDesignerVisible}" />

                <Button Content="🔍+" Command="{Binding DesignerViewModel.ZoomInCommand}"
                        IsVisible="{Binding IsDesignerVisible}" ToolTip.Tip="Zoom In (Ctrl++)" Width="36" />
                <Button Content="🔍-" Command="{Binding DesignerViewModel.ZoomOutCommand}"
                        IsVisible="{Binding IsDesignerVisible}" ToolTip.Tip="Zoom Out (Ctrl+-)" Width="36" />
                <Button Content="100%" Command="{Binding DesignerViewModel.ZoomResetCommand}"
                        IsVisible="{Binding IsDesignerVisible}" ToolTip.Tip="Reset Zoom (Ctrl+0)" Width="48" />
                <Separator Width="1" Height="24" Background="#cccccc" Margin="4,0" IsVisible="{Binding IsDesignerVisible}" />

                <ToggleButton Content="📐 Grid" IsChecked="{Binding DesignerViewModel.ShowGrid}"
                              IsVisible="{Binding IsDesignerVisible}" ToolTip.Tip="Show/Hide Grid" />
                <ToggleButton Content="🧲 Snap" IsChecked="{Binding DesignerViewModel.SnapToGrid}"
                              IsVisible="{Binding IsDesignerVisible}" ToolTip.Tip="Snap to Grid" />
                <Separator Width="1" Height="24" Background="#cccccc" Margin="4,0" IsVisible="{Binding IsDesignerVisible}" />

                <Button Content="❌ Delete" Command="{Binding DesignerViewModel.RemoveElementCommand}"
                        IsEnabled="{Binding DesignerViewModel.SelectedElement, Converter={x:Static ObjectConverters.IsNotNull}}"
                        IsVisible="{Binding IsDesignerVisible}" ToolTip.Tip="Delete Selected Element (Del)" />
                <Button Content="📋 Duplicate" Command="{Binding DesignerViewModel.DuplicateElementCommand}"
                        IsEnabled="{Binding DesignerViewModel.SelectedElement, Converter={x:Static ObjectConverters.IsNotNull}}"
                        IsVisible="{Binding IsDesignerVisible}" ToolTip.Tip="Duplicate Selected Element (Ctrl+D)" />
            </StackPanel>
        </Border>

        <!-- Main Content - Template List View -->
        <Grid ColumnDefinitions="300,*" IsVisible="{Binding !IsDesignerVisible}">
            <!-- Template List -->
            <Border Grid.Column="0" BorderBrush="#cccccc" BorderThickness="0,0,1,0" Padding="8">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Top" Text="Templates" FontWeight="Bold" Margin="0,0,0,8" />
                    <ListBox ItemsSource="{Binding Templates}"
                             SelectedItem="{Binding SelectedTemplate}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <TextBlock Text="{Binding Name}" FontWeight="Bold" />
                                    <TextBlock Text="{Binding Description}" Foreground="Gray" FontSize="11" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </Border>

            <!-- Template Details -->
            <Border Grid.Column="1" Padding="16">
                <StackPanel IsVisible="{Binding SelectedTemplate, Converter={x:Static ObjectConverters.IsNotNull}}">
                    <TextBlock Text="Template Details" FontSize="18" FontWeight="Bold" Margin="0,0,0,16" />

                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="120,*" RowSpacing="8">
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Name:" VerticalAlignment="Center" />
                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding SelectedTemplate.Name}" />

                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Description:" VerticalAlignment="Top" />
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding SelectedTemplate.Description}"
                                 Height="60" AcceptsReturn="True" TextWrapping="Wrap" />

                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Author:" VerticalAlignment="Center" />
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding SelectedTemplate.Author}" IsReadOnly="True" />

                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Orientation:" VerticalAlignment="Center" />
                        <ComboBox Grid.Row="3" Grid.Column="1"
                                  ItemsSource="{Binding AvailableOrientations}"
                                  SelectedItem="{Binding SelectedTemplate.Orientation}" />

                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Paper Size:" VerticalAlignment="Center" />
                        <ComboBox Grid.Row="4" Grid.Column="1"
                                  ItemsSource="{Binding AvailablePaperSizes}"
                                  SelectedItem="{Binding SelectedTemplate.PaperSize}" />

                        <TextBlock Grid.Row="5" Grid.Column="0" Text="Sections:" VerticalAlignment="Top" Margin="0,8,0,0" />
                        <ListBox Grid.Row="5" Grid.Column="1" ItemsSource="{Binding SelectedTemplate.Sections}" Height="150">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock>
                                        <Run Text="{Binding Name}" FontWeight="Bold" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding Type}" />
                                    </TextBlock>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </StackPanel>
            </Border>
        </Grid>

        <!-- Main Content - Designer View -->
        <Grid ColumnDefinitions="200,*,280" IsVisible="{Binding IsDesignerVisible}">
            <!-- Left Panel: Toolbox -->
            <Border Grid.Column="0" BorderBrush="#cccccc" BorderThickness="0,0,1,0" Padding="8" Background="#fafafa">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Top" Text="Toolbox" FontWeight="Bold" FontSize="14" Margin="0,0,0,12" />

                    <!-- Element Types -->
                    <ScrollViewer>
                        <StackPanel Spacing="4">
                            <TextBlock Text="Elements" FontWeight="Bold" Margin="0,0,0,4" />

                            <Button Content="📝 Label" Command="{Binding DesignerViewModel.AddElementCommand}"
                                    CommandParameter="{x:Static domain:ElementType.Label}"
                                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" />

                            <Button Content="📄 Text Field" Command="{Binding DesignerViewModel.AddElementCommand}"
                                    CommandParameter="{x:Static domain:ElementType.TextField}"
                                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" />

                            <Button Content="🧮 Calculated Field" Command="{Binding DesignerViewModel.AddElementCommand}"
                                    CommandParameter="{x:Static domain:ElementType.CalculatedField}"
                                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" />

                            <Separator Height="1" Background="#ddd" Margin="0,8" />
                            <TextBlock Text="Shapes" FontWeight="Bold" Margin="0,0,0,4" />

                            <Button Content="➖ Line" Command="{Binding DesignerViewModel.AddElementCommand}"
                                    CommandParameter="{x:Static domain:ElementType.Line}"
                                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" />

                            <Button Content="▭ Rectangle" Command="{Binding DesignerViewModel.AddElementCommand}"
                                    CommandParameter="{x:Static domain:ElementType.Rectangle}"
                                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" />

                            <Button Content="⬜ Rounded Rect" Command="{Binding DesignerViewModel.AddElementCommand}"
                                    CommandParameter="{x:Static domain:ElementType.RoundedRectangle}"
                                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" />

                            <Button Content="⭕ Ellipse" Command="{Binding DesignerViewModel.AddElementCommand}"
                                    CommandParameter="{x:Static domain:ElementType.Ellipse}"
                                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" />

                            <Separator Height="1" Background="#ddd" Margin="0,8" />
                            <TextBlock Text="Special" FontWeight="Bold" Margin="0,0,0,4" />

                            <Button Content="🖼️ Image" Command="{Binding DesignerViewModel.AddElementCommand}"
                                    CommandParameter="{x:Static domain:ElementType.Image}"
                                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" />

                            <Button Content="📊 Barcode" Command="{Binding DesignerViewModel.AddElementCommand}"
                                    CommandParameter="{x:Static domain:ElementType.Barcode}"
                                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" />

                            <Button Content="📱 QR Code" Command="{Binding DesignerViewModel.AddElementCommand}"
                                    CommandParameter="{x:Static domain:ElementType.QRCode}"
                                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" />
                        </StackPanel>
                    </ScrollViewer>
                </DockPanel>
            </Border>

            <!-- Center Panel: Designer Canvas -->
            <Border Grid.Column="1" Background="#e8e8e8" ClipToBounds="True">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <Border Margin="20" Background="White" BorderBrush="#999" BorderThickness="1"
                            Width="{Binding DesignerViewModel.Template.PaperSize, Converter={StaticResource PaperSizeToWidthConverter}}"
                            Height="800">
                        <Canvas Background="White">
                            <!-- Grid Background (if enabled) -->
                            <Rectangle IsVisible="{Binding DesignerViewModel.ShowGrid}"
                                      Width="{Binding $parent[Canvas].Bounds.Width}"
                                      Height="{Binding $parent[Canvas].Bounds.Height}"
                                      Fill="#f9f9f9" Opacity="0.5" />

                            <!-- Template Name -->
                            <TextBlock Canvas.Left="10" Canvas.Top="10"
                                      Text="{Binding DesignerViewModel.Template.Name, StringFormat='Template: {0}'}"
                                      FontSize="16" FontWeight="Bold" Foreground="#666" />

                            <!-- Render all elements from selected section -->
                            <ItemsControl ItemsSource="{Binding DesignerViewModel.SelectedSection.Elements}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>

                                <ItemsControl.Styles>
                                    <Style Selector="ContentPresenter" x:DataType="domain:ReportElement">
                                        <Setter Property="Canvas.Left" Value="{Binding X}" />
                                        <Setter Property="Canvas.Top" Value="{Binding Y}" />
                                    </Style>
                                </ItemsControl.Styles>

                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderBrush="{Binding ForeColor}"
                                                BorderThickness="1"
                                                Background="{Binding BackColor}"
                                                Width="{Binding Width}"
                                                Height="{Binding Height}"
                                                CornerRadius="{Binding Type, Converter={StaticResource ElementTypeToCornerRadiusConverter}}"
                                                Cursor="Hand"
                                                Tapped="Element_Tapped"
                                                Tag="{Binding}"
                                                Name="ElementBorder">
                                            <TextBlock Text="{Binding StaticText}"
                                                      FontFamily="{Binding FontFamily}"
                                                      FontSize="{Binding FontSize}"
                                                      FontWeight="{Binding FontBold, Converter={StaticResource BoolToFontWeightConverter}}"
                                                      FontStyle="{Binding FontItalic, Converter={StaticResource BoolToFontStyleConverter}}"
                                                      Foreground="{Binding ForeColor}"
                                                      TextAlignment="{Binding TextAlign}"
                                                      VerticalAlignment="{Binding VerticalAlign}"
                                                      Padding="2" />
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Canvas>
                    </Border>
                </ScrollViewer>
            </Border>

            <!-- Right Panel: Properties -->
            <Border Grid.Column="2" BorderBrush="#cccccc" BorderThickness="1,0,0,0" Padding="12" Background="#fafafa">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Top" Text="Properties" FontWeight="Bold" FontSize="14" Margin="0,0,0,12" />

                    <ScrollViewer>
                        <StackPanel Spacing="8" IsVisible="{Binding DesignerViewModel.SelectedElement, Converter={x:Static ObjectConverters.IsNotNull}}">

                            <!-- Element Info -->
                            <TextBlock Text="Element" FontWeight="Bold" />
                            <StackPanel Spacing="4">
                                <TextBlock Text="Name:" FontSize="11" Foreground="#666" />
                                <TextBox Text="{Binding DesignerViewModel.SelectedElement.Name}" />

                                <TextBlock Text="Type:" FontSize="11" Foreground="#666" Margin="0,4,0,0" />
                                <TextBlock Text="{Binding DesignerViewModel.SelectedElement.Type}" FontWeight="Bold" />
                            </StackPanel>

                            <Separator Height="1" Background="#ddd" />

                            <!-- Position & Size -->
                            <TextBlock Text="Position &amp; Size" FontWeight="Bold" />
                            <StackPanel Spacing="4">
                                <Grid ColumnDefinitions="*,*" ColumnSpacing="8">
                                    <StackPanel Grid.Column="0">
                                        <TextBlock Text="X:" FontSize="11" Foreground="#666" />
                                        <NumericUpDown Value="{Binding DesignerViewModel.SelectedElement.X}" Minimum="0" FormatString="0.0" />
                                    </StackPanel>
                                    <StackPanel Grid.Column="1">
                                        <TextBlock Text="Y:" FontSize="11" Foreground="#666" />
                                        <NumericUpDown Value="{Binding DesignerViewModel.SelectedElement.Y}" Minimum="0" FormatString="0.0" />
                                    </StackPanel>
                                </Grid>

                                <Grid ColumnDefinitions="*,*" ColumnSpacing="8">
                                    <StackPanel Grid.Column="0">
                                        <TextBlock Text="Width:" FontSize="11" Foreground="#666" />
                                        <NumericUpDown Value="{Binding DesignerViewModel.SelectedElement.Width}" Minimum="1" FormatString="0.0" />
                                    </StackPanel>
                                    <StackPanel Grid.Column="1">
                                        <TextBlock Text="Height:" FontSize="11" Foreground="#666" />
                                        <NumericUpDown Value="{Binding DesignerViewModel.SelectedElement.Height}" Minimum="1" FormatString="0.0" />
                                    </StackPanel>
                                </Grid>
                            </StackPanel>

                            <Separator Height="1" Background="#ddd" />

                            <!-- Font Properties -->
                            <TextBlock Text="Font" FontWeight="Bold" />
                            <StackPanel Spacing="4">
                                <TextBlock Text="Font Family:" FontSize="11" Foreground="#666" />
                                <ComboBox ItemsSource="{Binding DesignerViewModel.AvailableFontFamilies}"
                                          SelectedItem="{Binding DesignerViewModel.SelectedElement.FontFamily}" />

                                <TextBlock Text="Font Size:" FontSize="11" Foreground="#666" Margin="0,4,0,0" />
                                <NumericUpDown Value="{Binding DesignerViewModel.SelectedElement.FontSize}" Minimum="6" Maximum="72" />

                                <CheckBox Content="Bold" IsChecked="{Binding DesignerViewModel.SelectedElement.FontBold}" Margin="0,4,0,0" />
                                <CheckBox Content="Italic" IsChecked="{Binding DesignerViewModel.SelectedElement.FontItalic}" />
                            </StackPanel>

                            <Separator Height="1" Background="#ddd" />

                            <!-- Text Alignment -->
                            <TextBlock Text="Alignment" FontWeight="Bold" />
                            <StackPanel Spacing="4">
                                <TextBlock Text="Horizontal:" FontSize="11" Foreground="#666" />
                                <ComboBox ItemsSource="{Binding DesignerViewModel.AvailableTextAlignments}"
                                          SelectedItem="{Binding DesignerViewModel.SelectedElement.TextAlign}" />

                                <TextBlock Text="Vertical:" FontSize="11" Foreground="#666" Margin="0,4,0,0" />
                                <ComboBox ItemsSource="{Binding DesignerViewModel.AvailableVerticalAlignments}"
                                          SelectedItem="{Binding DesignerViewModel.SelectedElement.VerticalAlign}" />
                            </StackPanel>

                            <Separator Height="1" Background="#ddd" />

                            <!-- Colors -->
                            <TextBlock Text="Colors" FontWeight="Bold" />
                            <StackPanel Spacing="4">
                                <TextBlock Text="Foreground:" FontSize="11" Foreground="#666" />
                                <TextBox Text="{Binding DesignerViewModel.SelectedElement.ForeColor}" />

                                <TextBlock Text="Background:" FontSize="11" Foreground="#666" Margin="0,4,0,0" />
                                <TextBox Text="{Binding DesignerViewModel.SelectedElement.BackColor}" />
                            </StackPanel>

                            <Separator Height="1" Background="#ddd" />

                            <!-- Content -->
                            <TextBlock Text="Content" FontWeight="Bold" />
                            <StackPanel Spacing="4">
                                <TextBlock Text="Static Text:" FontSize="11" Foreground="#666" />
                                <TextBox Text="{Binding DesignerViewModel.SelectedElement.StaticText}" AcceptsReturn="True" Height="60" />

                                <TextBlock Text="Data Field:" FontSize="11" Foreground="#666" Margin="0,4,0,0" />
                                <TextBox Text="{Binding DesignerViewModel.SelectedElement.DataField}" />

                                <TextBlock Text="Expression:" FontSize="11" Foreground="#666" Margin="0,4,0,0" />
                                <TextBox Text="{Binding DesignerViewModel.SelectedElement.Expression}" />
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>
                </DockPanel>
            </Border>
        </Grid>
    </DockPanel>

</Window>
